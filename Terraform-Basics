
Providers
  - official - aws,gcp,azure,local - maintained by HC
  - verified - BigIP, Digital Ocean, Heroku - third-party - maintained by third-party
  - community
  
  Plugins are downloaded in /root/terraform-projects/things-to-do/.terraform/plugins
  
  
  ===================== Variable ===========================
  
 hardcoding value is not a good idea, re-use the  code
 
 VARIABLE .TF                              
  variable "filename" {                     
    default = "/root/pets.txt"
 }
 
  MAIN.TF
  resource "local_file" "pet" {
    filename = var.filename
    content = var.content
  }
  
  after change update using terraform apply
  
  
 VARIABLE .TF                              
  variable "filename" {                     
    default = "/root/pets.txt"
    type =  (optional - string, number, bool, list, map (map(string/numbers)), set(cannot be duplicate values), 
    object(combine all variable types), tuple(similar to a list but can use elements of different variable types - tuplee([string ,number, bool])),
    any(default))
    description = (optional)
    }
    
    instead to add variable values in a file we can useadd in the interactive mode or use flag -var 
    or can declare variable (export TF_VAR_content="hello")
    terraform apply -var "content=hello" -var "prefix=Mr"
    
    files -> .tfvars or tfvars.json
    terraform apply -var file-name.tfvars
    
    
    Terraform automatically loaded
    terraform.tfvars
    terraform.tfvars.json
    *.auto.tfvars
    *.auto.tfvars.json
    
    priority -> -var;  *.auto.tfvars  ; terraform.tfvars  ;  export TF_VAR_content="hello"
    
    
    ======================== Resource Attributes ===============================

https://registry.terraform.io/providers/bees-oss/optimizely/latest/docs/resources/audience#id

resource "local_file" "pet" {
    filename = var.filename
    content = "My favorite pet is ${random_pet.my-pet.id}"
}

resource "random_pet" "my-pet" {
   prefix = var.prefix
   separator = var.separator
   length = var.length
}
  
  
  ====================  Resource Dependencies  =================================
  
  resource "local_file" "pet" {
    filename = var.filename
    content = "My favorite pet is Mr. Dog
    depends_on = [                  -> this make sure is only created after the random_pet resource is created (explict dependency)
      random_pet.my-pet
     ]
 }    

resource "random_pet" "my-pet" {
   prefix = var.prefix
   separator = var.separator
   length = var.length
}
    
 
